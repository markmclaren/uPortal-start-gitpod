image:
  file: .gitpod.Dockerfile

tasks:
  #- init: ./gradlew portalInit
  - command: |
      mkdir portal
      export PORTAL_HOME=$(pwd)/portal
      export PORTAL_URL=$(gp url 8080)      
      cat <<-EOF > ./portal/global.properties
      ## Portal Server
      portal.protocol=https
      portal.server=${PORTAL_URL:8}
      portal.context=/uPortal
      ## Central Authentication Service (CAS)
      cas.protocol=https
      cas.server=${PORTAL_URL:8}
      cas.context=/cas
      EOF
      cat <<-EOF > ./portal/cas.properties 
      # Services Management Web UI Security
      server.name=${PORTAL_URL}
      server.prefix=\${server.name}/cas
      cas.securityContext.serviceProperties.service=\${server.prefix}/services/j_acegi_cas_security_check
      # Names of roles allowed to access the CAS service manager
      cas.securityContext.serviceProperties.adminRoles=ROLE_ADMIN
      cas.securityContext.casProcessingFilterEntryPoint.loginUrl=\${server.prefix}/login
      cas.securityContext.ticketValidator.casServerUrlPrefix=\${server.prefix}
      # IP address or CIDR subnet allowed to access the /status URI of CAS that exposes health check information
      cas.securityContext.status.allowedSubnet=127.0.0.1
      cas.themeResolver.defaultThemeName=cas-theme-default
      cas.viewResolver.basename=default_views
      ##
      # Unique CAS node name
      # host.name is used to generate unique Service Ticket IDs and SAMLArtifacts.  This is usually set to the specific
      # hostname of the machine running the CAS node, but it could be any label so long as it is unique in the cluster.
      host.name=${PORTAL_URL:8}
      EOF   
      #./gradlew tomcatStart
# exposed ports
ports:
- port: 8080
  onOpen: open-preview
- port: 8005
  onOpen: ignore
- port: 8887
  onOpen: ignore
- port: 38015
  onOpen: ignore
- port: 45213
  onOpen: ignore
- port: 7800
  onOpen: ignore

#vscode:
#  extensions:
#    - redhat.java